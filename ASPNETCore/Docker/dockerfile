FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS tools

# install libman
RUN dotnet tool install -g Microsoft.Web.LibraryManager.Cli
# https://learn.microsoft.com/en-us/dotnet/core/tools/global-tools
RUN $HOME/.dotnet/tools/libman --version 

# install node/npm
ENV NODE_VERSION=18.16.0
RUN apt install -y curl
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"
RUN npm --version

# or install node/npm (use shell with paths)
# SHELL ["/bin/bash", "--login", "-c"]
# RUN apt install -y curl
# RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
# ENV NVM_DIR=/root/.nvm
# RUN . "$NVM_DIR/nvm.sh" && nvm install --lts
# RUN . "$NVM_DIR/nvm.sh" && nvm use --lts

# or install node/npm (long time)
# RUN apt-get update && apt-get install -y \
#     software-properties-common \
#     npm
# RUN npm install npm@latest -g && \
#     npm install n -g && \
#     n latest

FROM tools AS build

WORKDIR /source

COPY . .

WORKDIR /source/Server

RUN npm i
RUN $HOME/.dotnet/tools/libman restore

WORKDIR /source
RUN dotnet restore Server
RUN dotnet publish ./Server/Server.csproj -c Release -o ./.artifacts

# final stage/image
FROM base

WORKDIR /app
COPY --from=build /source/.artifacts .

ENTRYPOINT ["dotnet", "Server.dll"]
