@page "/"

@using DevExpress.Spreadsheet;
@inject IJSRuntime iJSRuntime;

<PageTitle>DxWorkbook</PageTitle>

<h1>Download Xlsx file</h1>

<button @onclick="GenerateAndDownload">Generate and download</button>
<p role="status">Status: @exportStatus</p>


@code {
  private string? exportStatus = "Export is not started";
  private int counter = 0;

  private void GenerateAndDownload() {
    exportStatus = "Started...";
    using var wb = new Workbook();
    
    MyFunc1 myFunc1 = new MyFunc1();
    if(!wb.Functions.GlobalCustomFunctions.Contains(myFunc1.Name)) {
      wb.Functions.GlobalCustomFunctions.Add(myFunc1);
    }
    wb.DocumentSettings.Calculation.EnableMultiThreading = false;
    wb.DocumentSettings.Calculation.Mode = CalculationMode.Automatic;

    wb.BeginUpdate();

    var ws = wb.Worksheets[0];
    ws.Cells["A1"].Value = "hello worl";
    ws.Cells["A3"].FormulaInvariant = "=MYFUNC1()";

    wb.EndUpdate();
    //wb.CalculateFullRebuild();
    wb.Calculate();

    ws.Cells["A5"].Value = ws.Cells["A3"].Value;
    //ws.Cells["A5"].Value = ws.Cells["A3"].GetRichText;

    byte[] bytes = wb.SaveDocument(DocumentFormat.Xlsx);
    exportStatus = "Workbook was created...";

    // wwwroot\js\SaveAsFile.js
    iJSRuntime.InvokeVoidAsync("SaveAsFile", "DxWorkbook.xlsx", Convert.ToBase64String(bytes));
    counter++;
    exportStatus = "Workbook was saved...(" + counter + ")";
  }
}
