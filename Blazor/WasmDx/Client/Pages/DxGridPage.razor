@page "/DxGrid"
@using DevExpress.Export
@using WasmDx.Shared
@using WasmDx.Client.Utils
@inject HttpClient Http;

<PageTitle>DxGrid</PageTitle>

<h1>DxGrid!</h1>

@if (forecasts == null)
{
    <p>Loading...</p>
}
else {
  @* Not supported: <DxButton RenderStyle="ButtonRenderStyle.Primary" Text="Export to Pdf" @Click="ExportToPdf_Click"/> *@
  <DxButton RenderStyle="ButtonRenderStyle.Secondary" Text="Export to Xlsx" Click="@ExportToXlsx_Click"/>
  <DxGrid @ref="grid" Data="@forecasts" ShowGroupPanel="true" ShowFilterRow="true">
    <Columns>
        <DxGridDataColumn FieldName="Date" DisplayFormat="D" />
        <DxGridDataColumn FieldName="Summary" Width="120px" />
        <DxGridDataColumn FieldName="TemperatureC" Caption="Temperature" Width="120px" />
    </Columns>
  </DxGrid>
}

@code {
  IGrid grid { get; set; }
  IEnumerable<SharedWeatherForecast>? forecasts { get; set; }
  private async Task ExportToXlsx_Click() {
    await grid.ExportToXlsxAsync("DxGrid");
  }
  protected override async Task OnInitializedAsync()
  {
    forecasts = await Http.GetFromJsonAsync<SharedWeatherForecast[]>(RouteUrls.WeatherForecast);
  }
}
