name: Force workflow after each change in any branch

# More details: 
# - https://docs.github.com/en/actions/quickstart
# - https://crunchingnumbers.live/2020/03/17/ci-with-github-actions-for-ember-apps/
# - https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule
# - https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012
# - https://stackoverflow.com/questions/66353544/should-i-pseudo-fork-my-own-github-repository-or-use-branches

# - https://docs.microsoft.com/en-us/dotnet/devops/dotnet-test-github-action
# - https://devblogs.microsoft.com/dotnet/dotnet-loves-github-actions/
# - https://github.com/marketplace/actions/test-reporter

on: 
  # Force workflow after each change in any branch
  push:
    # In addition, enable "Require branches to be up to date before merging" for repository to run tests on the latest PR sources
    # branches: '**'
      # '*': Matches all branch and tag names that don't contain a slash (/).
      # '**': Matches all branch and tag names. This is the default behavior when you don't use a branches or tags filter.
      # - main - run on 'main' only to avoid 'double runs' of workflow for your PR
      # With this condition, workflow will be run only after you created PR
      # Keep filter empty to run workflow for each change in your branch
      # (but you need to find your result in the list of GA results until you create a PR - it can take additional time)

  # pull_request: workflow will be started twice after you created a PR: one for your change in your branch (push event) and one for change in your PR (pull_request event)

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        #run: findstr /c:"Hello World" file1.txt >nul || (echo "Hello World" was not found in file1.txt && exit 1)
        run: |
          ls
          cat GitHubActionsWorkflow/file1.txt
          grep -i 'Hello World' GitHubActionsWorkflow/file1.txt || (echo "Hello World" case insensitive was not found in GitHubActionsWorkflow/file1.txt && exit 1)
          exit 0
